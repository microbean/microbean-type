memberSearchIndex = [{"p":"org.microbean.type","c":"AbstractType","l":"AbstractType()","url":"%3Cinit%3E()"},{"p":"org.microbean.type","c":"TypeSet","l":"add(Type)","url":"add(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"TypeSet","l":"addAll(Collection<? extends Type>)","url":"addAll(java.util.Collection)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"anyIsAssignable(Type, Collection<? extends Type>)","url":"anyIsAssignable(java.lang.reflect.Type,java.util.Collection)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"box(Class<?>)","url":"box(java.lang.Class)"},{"p":"org.microbean.type","c":"Types","l":"box(T)"},{"p":"org.microbean.type","c":"TypeSet","l":"clear()"},{"p":"org.microbean.type","c":"TypeSet","l":"contains(Object)","url":"contains(java.lang.Object)"},{"p":"org.microbean.type","c":"TypeSet","l":"containsAll(Collection<?>)","url":"containsAll(java.util.Collection)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"CovariantTypeSemantics(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"org.microbean.type","c":"DefaultGenericArrayType","l":"DefaultGenericArrayType(Type)","url":"%3Cinit%3E(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"DefaultParameterizedType(ParameterizedType)","url":"%3Cinit%3E(java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"DefaultParameterizedType(Type, Type, Type...)","url":"%3Cinit%3E(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type...)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"DefaultTypeVariable(T, Predicate<? super TypeVariable<?>>)","url":"%3Cinit%3E(T,java.util.function.Predicate)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"DefaultTypeVariable(T, String)","url":"%3Cinit%3E(T,java.lang.String)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"DefaultTypeVariable(TypeVariable<? extends T>)","url":"%3Cinit%3E(java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"AbstractType","l":"EMPTY_ANNOTATED_TYPE_ARRAY"},{"p":"org.microbean.type","c":"AbstractType","l":"EMPTY_ANNOTATION_ARRAY"},{"p":"org.microbean.type","c":"AbstractType","l":"EMPTY_TYPE_ARRAY"},{"p":"org.microbean.type","c":"AbstractType","l":"EMPTY_TYPE_VARIABLE_ARRAY"},{"p":"org.microbean.type","c":"TypeSet","l":"EMPTY_TYPESET"},{"p":"org.microbean.type","c":"TypeSet","l":"emptyTypeSet()"},{"p":"org.microbean.type","c":"DefaultGenericArrayType","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.microbean.type","c":"Types","l":"equals(Type, Type)","url":"equals(java.lang.reflect.Type,java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"Types","l":"erase(Type)","url":"erase(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"getActualTypeArguments()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getAnnotatedBounds()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getAnnotation(Class<T>)","url":"getAnnotation(java.lang.Class)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getAnnotations()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getAnnotationsByType(Class<T>)","url":"getAnnotationsByType(java.lang.Class)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getBounds()"},{"p":"org.microbean.type","c":"TypeSet","l":"getClasses()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getDeclaredAnnotation(Class<T>)","url":"getDeclaredAnnotation(java.lang.Class)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getDeclaredAnnotations()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getDeclaredAnnotationsByType(Class<T>)","url":"getDeclaredAnnotationsByType(java.lang.Class)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getDelegate()"},{"p":"org.microbean.type","c":"Types","l":"getEffectiveBounds(TypeVariable<?>)","url":"getEffectiveBounds(java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSet","l":"getGenericClasses()"},{"p":"org.microbean.type","c":"DefaultGenericArrayType","l":"getGenericComponentType()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getGenericDeclaration()"},{"p":"org.microbean.type","c":"TypeSet","l":"getGenericInterfaces()"},{"p":"org.microbean.type","c":"TypeSet","l":"getInterfaces()"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"getInvariantTypeSemantics()"},{"p":"org.microbean.type","c":"TypeSet","l":"getMostSpecializedClass()"},{"p":"org.microbean.type","c":"TypeSet","l":"getMostSpecializedGenericClass()"},{"p":"org.microbean.type","c":"TypeSet","l":"getMostSpecializedGenericInterface()"},{"p":"org.microbean.type","c":"TypeSet","l":"getMostSpecializedInterface()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"getName()"},{"p":"org.microbean.type","c":"TypeSemantics","l":"getNearestAncestor(Type, Type)","url":"getNearestAncestor(java.lang.reflect.Type,java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"getOwnerType()"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"getRawType()"},{"p":"org.microbean.type","c":"TypeSet","l":"getRawTypes()"},{"p":"org.microbean.type","c":"TypeSemantics","l":"getSemanticsFor(Type, Type)","url":"getSemanticsFor(java.lang.reflect.Type,java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"DefaultGenericArrayType","l":"hashCode()"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"hashCode()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"hashCode()"},{"p":"org.microbean.type","c":"Types","l":"hashCode(Type)","url":"hashCode(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"UnboundedWildcardType","l":"INSTANCE"},{"p":"org.microbean.type","c":"InvariantTypeSemantics","l":"InvariantTypeSemantics(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"isAnnotationPresent(Class<? extends Annotation>)","url":"isAnnotationPresent(java.lang.Class)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(Class<?>, Class<?>)","url":"isAssignable(java.lang.Class,java.lang.Class)"},{"p":"org.microbean.type","c":"InvariantTypeSemantics","l":"isAssignable(Class<?>, Class<?>)","url":"isAssignable(java.lang.Class,java.lang.Class)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(Class<?>, Class<?>)","url":"isAssignable(java.lang.Class,java.lang.Class)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(Class<?>, GenericArrayType)","url":"isAssignable(java.lang.Class,java.lang.reflect.GenericArrayType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(Class<?>, GenericArrayType)","url":"isAssignable(java.lang.Class,java.lang.reflect.GenericArrayType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(Class<?>, ParameterizedType)","url":"isAssignable(java.lang.Class,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(Class<?>, ParameterizedType)","url":"isAssignable(java.lang.Class,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(Class<?>, TypeVariable<?>)","url":"isAssignable(java.lang.Class,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(Class<?>, TypeVariable<?>)","url":"isAssignable(java.lang.Class,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(Class<?>, WildcardType)","url":"isAssignable(java.lang.Class,java.lang.reflect.WildcardType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(GenericArrayType, Class<?>)","url":"isAssignable(java.lang.reflect.GenericArrayType,java.lang.Class)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(GenericArrayType, Class<?>)","url":"isAssignable(java.lang.reflect.GenericArrayType,java.lang.Class)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(GenericArrayType, GenericArrayType)","url":"isAssignable(java.lang.reflect.GenericArrayType,java.lang.reflect.GenericArrayType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(GenericArrayType, ParameterizedType)","url":"isAssignable(java.lang.reflect.GenericArrayType,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(GenericArrayType, TypeVariable<?>)","url":"isAssignable(java.lang.reflect.GenericArrayType,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(GenericArrayType, WildcardType)","url":"isAssignable(java.lang.reflect.GenericArrayType,java.lang.reflect.WildcardType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(ParameterizedType, Class<?>)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.Class)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(ParameterizedType, Class<?>)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.Class)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(ParameterizedType, GenericArrayType)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.reflect.GenericArrayType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(ParameterizedType, ParameterizedType)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"InvariantTypeSemantics","l":"isAssignable(ParameterizedType, ParameterizedType)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(ParameterizedType, ParameterizedType)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(ParameterizedType, TypeVariable<?>)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(ParameterizedType, TypeVariable<?>)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(ParameterizedType, WildcardType)","url":"isAssignable(java.lang.reflect.ParameterizedType,java.lang.reflect.WildcardType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(Type, Type)","url":"isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(TypeVariable<?>, Class<?>)","url":"isAssignable(java.lang.reflect.TypeVariable,java.lang.Class)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(TypeVariable<?>, GenericArrayType)","url":"isAssignable(java.lang.reflect.TypeVariable,java.lang.reflect.GenericArrayType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(TypeVariable<?>, ParameterizedType)","url":"isAssignable(java.lang.reflect.TypeVariable,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(TypeVariable<?>, TypeVariable<?>)","url":"isAssignable(java.lang.reflect.TypeVariable,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"InvariantTypeSemantics","l":"isAssignable(TypeVariable<?>, TypeVariable<?>)","url":"isAssignable(java.lang.reflect.TypeVariable,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(TypeVariable<?>, TypeVariable<?>)","url":"isAssignable(java.lang.reflect.TypeVariable,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(TypeVariable<?>, WildcardType)","url":"isAssignable(java.lang.reflect.TypeVariable,java.lang.reflect.WildcardType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(WildcardType, Class<?>)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.Class)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(WildcardType, Class<?>)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.Class)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(WildcardType, GenericArrayType)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.GenericArrayType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(WildcardType, GenericArrayType)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.GenericArrayType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(WildcardType, ParameterizedType)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(WildcardType, ParameterizedType)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(WildcardType, TypeVariable<?>)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(WildcardType, TypeVariable<?>)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.TypeVariable)"},{"p":"org.microbean.type","c":"CovariantTypeSemantics","l":"isAssignable(WildcardType, WildcardType)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.WildcardType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isAssignable(WildcardType, WildcardType)","url":"isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.WildcardType)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"isBoxing()"},{"p":"org.microbean.type","c":"Types","l":"isClass(Type)","url":"isClass(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"TypeSet","l":"isEmpty()"},{"p":"org.microbean.type","c":"Types","l":"isGeneric(Class<?>)","url":"isGeneric(java.lang.Class)"},{"p":"org.microbean.type","c":"Types","l":"isPrimitive(Type)","url":"isPrimitive(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"Types","l":"isRawType(Type)","url":"isRawType(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"Types","l":"isReferenceType(Type)","url":"isReferenceType(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"TypeSet","l":"iterator()"},{"p":"org.microbean.type","c":"LowerBoundedWildcardType","l":"LowerBoundedWildcardType(Type)","url":"%3Cinit%3E(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"LowerBoundedWildcardType","l":"LowerBoundedWildcardType(Type[])","url":"%3Cinit%3E(java.lang.reflect.Type[])"},{"p":"org.microbean.type","c":"Types","l":"normalize(Type)","url":"normalize(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"TypeSet","l":"remove(Object)","url":"remove(java.lang.Object)"},{"p":"org.microbean.type","c":"TypeSet","l":"removeAll(Collection<?>)","url":"removeAll(java.util.Collection)"},{"p":"org.microbean.type","c":"Types","l":"resolve(Type, Function<? super Type, ? extends Type>)","url":"resolve(java.lang.reflect.Type,java.util.function.Function)"},{"p":"org.microbean.type","c":"TypeSet","l":"retainAll(Collection<?>)","url":"retainAll(java.util.Collection)"},{"p":"org.microbean.type","c":"TypeSet","l":"size()"},{"p":"org.microbean.type","c":"TypeSet","l":"spliterator()"},{"p":"org.microbean.type","c":"TypeSet","l":"toArray()"},{"p":"org.microbean.type","c":"TypeSet","l":"toArray(T[])"},{"p":"org.microbean.type","c":"Types","l":"toSerializableType(Type)","url":"toSerializableType(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"DefaultGenericArrayType","l":"toString()"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"toString()"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"toString()"},{"p":"org.microbean.type","c":"TypeSet","l":"toString()"},{"p":"org.microbean.type","c":"Types","l":"toString(Type)","url":"toString(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"Types","l":"toTypes(Type, Predicate<? super Type>)","url":"toTypes(java.lang.reflect.Type,java.util.function.Predicate)"},{"p":"org.microbean.type","c":"Types","l":"toTypes(Type)","url":"toTypes(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"TypeSemantics","l":"TypeSemantics(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"org.microbean.type","c":"TypeSet","l":"TypeSet()","url":"%3Cinit%3E()"},{"p":"org.microbean.type","c":"TypeSet","l":"TypeSet(Collection<? extends Type>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"org.microbean.type","c":"TypeSet","l":"TypeSet(Type)","url":"%3Cinit%3E(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"UpperBoundedWildcardType","l":"UpperBoundedWildcardType(Type)","url":"%3Cinit%3E(java.lang.reflect.Type)"},{"p":"org.microbean.type","c":"UpperBoundedWildcardType","l":"UpperBoundedWildcardType(Type[])","url":"%3Cinit%3E(java.lang.reflect.Type[])"},{"p":"org.microbean.type","c":"DefaultGenericArrayType","l":"valueOf(GenericArrayType)","url":"valueOf(java.lang.reflect.GenericArrayType)"},{"p":"org.microbean.type","c":"DefaultParameterizedType","l":"valueOf(ParameterizedType)","url":"valueOf(java.lang.reflect.ParameterizedType)"},{"p":"org.microbean.type","c":"DefaultTypeVariable","l":"valueOf(TypeVariable<T>)","url":"valueOf(java.lang.reflect.TypeVariable)"}]